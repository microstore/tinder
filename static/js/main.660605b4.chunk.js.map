{"version":3,"sources":["building-blocks/ssss.jpg","Home.js","services/Constants.js","services/AjaxService.js","services/CashService.js","store.js","building-blocks/RenderForm.js","auth/PhoneToken.js","settings/AppSettingsService.js","building-blocks/PicWrapper.js","building-blocks/Info.js","userView/MoreFriends.js","userView/FriendRequests.js","building-blocks/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","hits","isLoading","error","to","src","ssss","Component","ipAdress","Const","URLS","BASE_URL","USER","NEW_FRIENDS","FAST_MATCH","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","handleWindowSizeChange","setWidth","window","innerWidth","parseInt","isMobile","persistAll","phone","obj","AjaxService","JSON","stringify","catch","e","console","loadAll","getPhone","setPhone","getToken","setToken","token","getSettings","settings","setSettings","persistSettings","persistBookmarks","arr","this","then","bgColor","textColor","bookmarks","cashStructureTemplate","addEventListener","reduce","json","value","key","reducer","combineReducers","form","reduxFormReducer","store","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","Error","matches","update","i","_id","addToStore","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","noCash","name","uuidv1","Field","onChange","component","PhoneToken","handleChange","event","target","handleChangeToken","doAuth","authToken","history","preventDefault","optns","autoComplete","withRouter","applyDesignSettings","applyClass","document","body","textColors","bgColors","persistSetting","settingName","settingObject","getSetting","element","colors","selectedColor","forEach","color","classList","remove","class","add","getInputStyleClasses","updatePollInterval","UPDATE_POLL_INTERVAL","isToShowPhotos","PicWrapper","nextPic","photos","ind","setState","imgSrc","personName","AppSettingsService","onClick","alt","arrayToStr","array","result","index","concat","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","interests","sexuality","distance_mi","bio","MoreFriends","getFriendRequests","results","persistToken","getPeopleNearby","alert","log","frRequests","peopleNear","process","isLiked","pic","friendRequestPicIds","indexOf","beanId","allFr","isMountedOk","usersNearby","frReq","found","find","oneUser","user","InfoWrapper","Pic","persons","one","info","image","columns","Header","accessor","sortable","defaultPageSize","pageSize","showPagination","changeState","addMsgMatch","findInMsgMatches","removeMsgMatch","showMoreFriendsRefreshButton","isVisibleMoreFriendsTab","hideMoreFriendsRefreshButton","changeButtonVisibility","toggleFlashTabTitle","startFlashTabTitle","stopFlashTabTitle","getUserData","match","updateFromBackend","showUser","isVisible","msgMatches","initialTitle","App","style","paddingTop","exact","path","render","updates","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.660605b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssss.7402c98b.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ssss from './building-blocks/ssss.jpg'\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hits: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n        <h2>Welcome</h2>\r\n        {/* <Link to=\"/phone\"> phon7777</Link>\r\n        <p/> */}\r\n        Here you can check who likes you secretly on Tinder. To do that, you have to follow the steps:\r\n        - Use Chrome or Firefox browser\r\n        - go to TINDER.COM and Login\r\n        - Hit F12 on your keyboard. Debug window will be visualized, much like the one shown in the image below:\r\n        \r\n      \r\n        <Link to=\"/phone-token\">  See your Tinder likes using x-token:</Link>\r\n        <p/> \r\n        <br/> \r\n        <img src={ssss} />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","let ipAdress = 'https://bender-app.herokuapp.com/';\r\n\r\nconst Const = {\r\n  URLS: {\r\n    BASE_URL: ipAdress,\r\n    USER: ipAdress + 'user/',\r\n    NEW_FRIENDS: ipAdress + 'new-friends',\r\n    FAST_MATCH: ipAdress + 'fast-match',\r\n\r\n    //// storage api:\r\n    STORAGE: ipAdress + 'storage/',\r\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\r\n    STORAGE_BOOKMARKS: ipAdress + ' ',\r\n    STORAGE_SETTINGS: ipAdress + ' '\r\n  },\r\n\r\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\r\n  AUTH_HEADER_NAME: 'X-Auth-Token',\r\n  PHONE_HEADER_NAME: 'phone-number',\r\n  VERSION: '1.45'\r\n}\r\n\r\nexport default Const;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Const from './Constants';\r\nimport CashService from './CashService';\r\n\r\nclass AjaxService extends React.Component {\r\n\r\n  execute = (method, url, data, headers) => {\r\n    return axios({\r\n      method: method,\r\n      url: url,\r\n      data: data,\r\n      headers: headers\r\n    });\r\n  };\r\n\r\n  doPost = (url, data, headers) => {\r\n    return this.execute('post', url, data, this.getHeaders(headers));\r\n  };\r\n\r\n  doPut = (url, data, headers) => {\r\n    return this.execute('put', url, data, this.getHeaders(headers));\r\n  };\r\n\r\n  doGet = (url, headers) => {\r\n    return this.execute('get', url, {}, this.getHeaders(headers));\r\n  };\r\n\r\n  doDelete = (url, headers) => {\r\n    return this.execute('delete', url, {}, this.getHeaders(headers));\r\n  };\r\n\r\n  getHeaders = (headers) => {\r\n    let authHeaderName = Const.AUTH_HEADER_NAME;\r\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\r\n    if (!headers) {\r\n      headers = {};\r\n    }\r\n\r\n    if (CashService[phoneHeaderName]) {\r\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\r\n    }\r\n\r\n    if (CashService[authHeaderName]) {\r\n      headers[authHeaderName] = CashService[authHeaderName];\r\n    }\r\n    return headers;\r\n  };\r\n}\r\n\r\nexport default new AjaxService();\r\n","import React from 'react';\r\nimport Const from './Constants';\r\nimport AjaxService from './AjaxService';\r\n\r\nclass CashService extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this[Const.PHONE_HEADER_NAME] = null;\r\n    this[Const.AUTH_HEADER_NAME] = null;\r\n    this.settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\r\n    this.bookmarks = [];\r\n    this.cashStructureTemplate = {\r\n      settings: this.settings,\r\n      [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\r\n      bookmarks: this.bookmarks\r\n    }\r\n    window.addEventListener('resize', this.handleWindowSizeChange);\r\n    this.setWidth(window.innerWidth);\r\n  };\r\n\r\n  handleWindowSizeChange =  ()=> {\r\n     this.setWidth(window.innerWidth);\r\n  }\r\n\r\n  setWidth = (innerWidth)=> {\r\n    innerWidth = parseInt(innerWidth)\r\n    //check if NaN \r\n    if (innerWidth !== innerWidth) {\r\n      innerWidth = 1000;\r\n    }\r\n    this.innerWidth = innerWidth;\r\n  }\r\n\r\n  isMobile = () => {\r\n    return this.innerWidth <= 768\r\n  }\r\n\r\n  persistAll =  (phone, obj) => {\r\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\r\n      'json': JSON.stringify(obj)\r\n    }, {});\r\n    promise.catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  loadAll = function (phone) {\r\n    return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\r\n  }\r\n\r\n  getPhone = () => {\r\n    return this[Const.PHONE_HEADER_NAME];\r\n  };\r\n\r\n  setPhone = (phone) => {\r\n    this[Const.PHONE_HEADER_NAME] = phone;\r\n  };\r\n\r\n  /// token:\r\n  getToken = () => {\r\n    return this[Const.AUTH_HEADER_NAME];\r\n  };\r\n\r\n  setToken = (token) => {\r\n    this[Const.AUTH_HEADER_NAME] = token;\r\n  };\r\n\r\n  persistToken(token) {\r\n    AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\r\n      'json': JSON.stringify({ \"token\": token })\r\n    });\r\n  }\r\n\r\n  //// settings:\r\n  getSettings = () => {\r\n    return this.settings;\r\n  };\r\n\r\n  setSettings = (settings) => {\r\n    this.settings = settings;\r\n  };\r\n\r\n  persistSettings = (settings) => {\r\n    AjaxService.doPut(Const.URLS.STORAGE_SETTINGS + this.getPhone(), {\r\n      'json': JSON.stringify(settings)\r\n    });\r\n  }\r\n\r\n  /// bookmarks:\r\n  getBookmarks() {\r\n    return this.bookmarks;\r\n  }\r\n\r\n  setBookmarks(bookmarks) {\r\n    this.bookmarks = bookmarks;\r\n  }\r\n\r\n  getBookmarksAsObject() {\r\n    return this.bookmarks.reduce((json, value, key) => {\r\n      json[value] = key;\r\n      return json;\r\n    }, {});\r\n  }\r\n\r\n  persistBookmarks = function (arr) {\r\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\r\n      'json': JSON.stringify(arr)\r\n    }, {});\r\n\r\n    promise.then((data) => {\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n}\r\n\r\nexport default new CashService();\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\n\r\nconst reducer = combineReducers({\r\n  form: reduxFormReducer // mounted under \"form\"\r\n})\r\nconst store =\r\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\r\n\r\nconst functionsQueue = [];\r\n\r\nlet addToFunctionsQ = (funct) => {\r\n  functionsQueue.push(funct);\r\n\r\n  while (functionsQueue.length > 0) {\r\n    let funcToCall = functionsQueue.shift()\r\n    funcToCall();\r\n  }\r\n}\r\n\r\nstore.getStore = () => {\r\n  // add dummy function as a placeholder\r\n  addToFunctionsQ(() => { });\r\n  return store;\r\n}\r\n\r\nstore.getMatchById = (id) => {\r\n  if (!id) {\r\n    throw new Error(\"'id' is not allowed to be: \" + id);\r\n  }\r\n  let matches = store.getStore()?.update?.data?.matches || [];\r\n  for (var i = 0; i < matches.length; i++) {\r\n    if (id === matches[i]._id) {\r\n      return matches[i];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nstore.addToStore = (key, value) => {\r\n  if (!key || typeof (key) != 'string') {\r\n    throw new Error(\"Only objects of type 'string' are allowed!\");\r\n  }\r\n\r\n  addToFunctionsQ(\r\n    function () {\r\n      store[key] = value;\r\n    }\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport uuidv1 from 'uuid/v1';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport store from '../store'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst eachComponent = ({ input, label, type, value, placeholder, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input className='form-control' {...input} placeholder={placeholder} type={type} />\r\n      {touched && error && <span>{error}</span>}\r\n      <p />\r\n    </div>\r\n  </div>\r\n)\r\nlet randomizeName = (obj) => {\r\n  if (obj.noCash) { // prevent auto-suggest\r\n    obj.name = uuidv1();\r\n  }\r\n}\r\nclass RenderForm extends React.Component {\r\n\r\n  render() {\r\n    let { options } = this.props;\r\n    let handleSubmit = options.handleSubmit;\r\n    let fields = options.fields;\r\n\r\n    let RenderFieldWrapped = () => (\r\n      <div>\r\n        <form onSubmit={handleSubmit} >\r\n          {\r\n            fields.map(op => {\r\n              randomizeName(op)\r\n              return <div key={op.name}>\r\n                <Field name={op.name} onChange={op.onChange} component={eachComponent}\r\n                  type=\"input\" placeholder={op.placeholder} label={op.label} />\r\n                <p />\r\n              </div>\r\n            })\r\n          }\r\n          < input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n\r\n\r\n    let RenderFieldWrappedInstance = reduxForm({\r\n      form: 'RenderFieldWrapped'\r\n    })(RenderFieldWrapped);\r\n\r\n    return (\r\n      <div>\r\n        <Provider store={store}>\r\n          <RenderFieldWrappedInstance options={options} />\r\n        </Provider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default RenderForm\r\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport RenderForm from '../building-blocks/RenderForm';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PhoneToken extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      phone: '',\r\n      token: ''\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.state.phone = event.target.value;\r\n  };\r\n\r\n  handleChangeToken = event => {\r\n    this.state.token = event.target.value;\r\n  };\r\n\r\n  doAuth = function (authToken, phone) {\r\n    CashService.setToken(authToken);\r\n    CashService.setPhone(authToken);\r\n    this.props.history.push('/more-pals') \r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    let phone = this.state.token;\r\n    let authToken = this.state.token\r\n\r\n      this.doAuth(authToken, phone)\r\n\r\n  }\r\n\r\n  render() {\r\n    const optns = {\r\n      handleSubmit: this.handleSubmit,\r\n      fields: [\r\n        { name: 'X-token', label: 'X-token', placeholder: 'auth token..', noCash: true, onChange: this.handleChangeToken }\r\n      ]\r\n    }\r\n\r\n    return (\r\n      <div autoComplete=\"new-password\">\r\n        <RenderForm autoComplete=\"new-password\" options={optns} />\r\n      </div >\r\n    )\r\n  }\r\n}\r\nexport default withRouter(PhoneToken);\r\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = Const.UPDATE_POLL_INTERVAL;\r\n    this.isToShowPhotos = true;\r\n    this.applyDesignSettings();\r\n  }\r\n\r\n  applyDesignSettings = () => {\r\n    this.applyClass(document.body, this.textColors, 'text-white');\r\n    this.applyClass(document.body, this.bgColors, 'bg-dark');\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let settings = CashService.getSettings();\r\n    return settings?.[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass PicWrapper extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let { photos, name } = this.props;\r\n    this.personName = name;\r\n\r\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\r\n    this.ind = 0;\r\n\r\n    let imgSrc = this.isToShowPhotos ? photos?.[this.ind]?.url : null;\r\n\r\n    this.state = {\r\n      photos: photos,\r\n      imgSrc: imgSrc\r\n    };\r\n  }\r\n\r\n   nextPic = () => {\r\n    if (!this.isToShowPhotos) {\r\n      return;\r\n    }\r\n    if (this.state.photos.length < 2) {\r\n      return;\r\n    }\r\n    if (this.ind < this.state.photos.length - 1) {\r\n      this.ind++;\r\n    } else {\r\n      this.ind = 0;\r\n    }\r\n\r\n    this.setState({\r\n      imgSrc: this.state.photos[this.ind].url\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.imgSrc) {\r\n      return (\r\n        <div>\r\n        </div>\r\n      )\r\n    } else if (this.isToShowPhotos) {\r\n      return (\r\n        <div className=\"container-fluid px-0\">\r\n          <img onClick={this.nextPic} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <label className=\"text-center\">{this.personName} </label>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\nexport default PicWrapper;\r\n","import React from 'react';\r\n\r\nfunction arrayToStr(array) {\r\n  if (!array) {\r\n    return null;\r\n  }\r\n  let result = \"\"\r\n  for (let index = 0; index < array.length; index++) {\r\n    const element = array[index];\r\n    const name = element?.name;\r\n    if (name) {\r\n      result = result.concat(name + \", \")\r\n    }\r\n  }\r\n  if (result === \"\") {\r\n    return null;\r\n  }\r\n  return result\r\n}\r\n\r\nfunction Info(args) {\r\n  let { person } = args;\r\n  if (!person) {\r\n    return (\r\n      <div> </div>\r\n    )\r\n  }\r\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\r\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\r\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\r\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\r\n  person.schools = person.schools?.[0]?.name || \"\";\r\n  let interests = arrayToStr(person?.interests);\r\n  let sexuality = arrayToStr(person?.sexuality);\r\n  return (\r\n    <div className=\"text-justify text-wrap\">\r\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\r\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Age:  </span> {age} </div>) : null}\r\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Away (miles):  </span> {person.distance_mi} </div>) : null}\r\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\r\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\r\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\r\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\r\n      {interests ? (<div> <span className=\"font-weight-bold\">Interests:  </span> {interests} </div>) : null}\r\n      {sexuality ? (<div> <span className=\"font-weight-bold\">Sexuality:  </span> {sexuality} </div>) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\nimport ReactTable from \"react-table\";\r\nimport AjaxService from '../services/AjaxService';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\nimport PicWrapper from \"../building-blocks/PicWrapper\";\r\nimport BtnLink from \"../building-blocks/BtnLink\";\r\nimport Info from \"../building-blocks/Info\";\r\nimport FriendRequests from './FriendRequests';\r\n\r\nclass MoreFriends extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      beanId: props.beanId,\r\n      allFr: []\r\n    };\r\n    this.friendRequestPicIds = \"\";\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getFriendRequests();\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  getFriendRequests = () => {\r\n    let authToken = CashService.getToken();\r\n\r\n    let headers = {\r\n      [Const.AUTH_HEADER_NAME] : authToken\r\n    }\r\n\r\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, headers)\r\n    promise.then((data) => {\r\n      if (!data?.data?.data?.results) {\r\n        return;\r\n      }\r\n      CashService.persistToken(authToken);\r\n      this.getPeopleNearby(data?.data?.data?.results);\r\n\r\n    }).catch((e) => {\r\n      window.alert('The provided token: ' + authToken\r\n      + ' is invalid.');\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  getPeopleNearby = (frRequests) => {\r\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\r\n    promise.then((data) => {\r\n      let peopleNear = data?.data?.results;\r\n      this.process(frRequests, peopleNear);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  process(frRequests, usersNearby) {\r\n    let result = [];\r\n    frRequests.forEach(frReq => {\r\n\r\n      let found = usersNearby.find(oneUser => {\r\n\r\n        let pic = oneUser.photos.find(pic => {\r\n          return pic.id === frReq.user.photos[0].id;\r\n        });\r\n\r\n        return !!pic\r\n      });\r\n\r\n      if (!!found) {\r\n        result.push(found)\r\n      } else {\r\n        frReq.photos = frReq.user.photos\r\n        frReq.name = '';\r\n        result.push(frReq)\r\n      }\r\n\r\n    });\r\n    this.setState({ allFr: result });\r\n  }\r\n\r\n  isLiked = (photos) => {\r\n    for (let index = 0; index < photos.length; index++) {\r\n      const pic = photos[index];\r\n      if (this.friendRequestPicIds.indexOf(pic.id) != -1) {\r\n        return true\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    let InfoWrapper = (args) => {\r\n      let { person } = args;\r\n      return (\r\n        <div className=\"text-justify text-wrap\">\r\n          <Info person={person} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    let Pic = args => <PicWrapper photos={args.photos} name={args.name} />\r\n\r\n    let allFr = this.state.allFr;\r\n    console.log(allFr);\r\n    let persons = allFr.map(one => {\r\n\r\n      let obj = {\r\n        info: (<InfoWrapper person={one} />),\r\n        image: (<Pic photos={one.photos} name={one.name} />)\r\n      }\r\n      return { ...obj };\r\n    });\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Photos\",\r\n            accessor: \"image\"\r\n          },\r\n          {\r\n            Header: \"Info\",\r\n            accessor: \"info\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <ReactTable className=\"-striped -highlight\"\r\n            data={persons}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={persons.length}\r\n            pageSize={persons.length}\r\n            showPagination={false}\r\n          />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default MoreFriends;","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\n\r\n\r\nclass FriendRequests extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allFr: [],\r\n      hits: [],\r\n      isLoading: false,\r\n      error: null,\r\n    };\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  getFriendRequests = () => {\r\n \r\n  }\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n  \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default FriendRequests;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      beanId: props.beanId,\r\n      showUser: false,\r\n      isVisible: false,\r\n      isVisibleMoreFriendsTab: false,\r\n      msgMatches: []\r\n    };\r\n    this.initialTitle = document.title;\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj);\r\n  }\r\n\r\n  addMsgMatch = () => {\r\n \r\n  }\r\n\r\n  findInMsgMatches = () => {\r\n    return -1;\r\n  }\r\n\r\n  removeMsgMatch = () => {\r\n\r\n  }\r\n\r\n  showMoreFriendsRefreshButton = () => {\r\n    this.setState({ isVisibleMoreFriendsTab: true });\r\n  }\r\n\r\n  hideMoreFriendsRefreshButton = () => {\r\n    this.setState({ isVisibleMoreFriendsTab: false });\r\n  }\r\n\r\n  changeButtonVisibility = (obj) => {\r\n    this.setState(obj);\r\n  }\r\n\r\n\r\n  toggleFlashTabTitle = () => {\r\n\r\n  }\r\n\r\n  startFlashTabTitle = () => {\r\n \r\n  }\r\n\r\n  stopFlashTabTitle = () => {\r\n   \r\n  }\r\n\r\n  getUserData = (match) => {\r\n    let clBack = (match) => {\r\n      this.props.history.push({\r\n        pathname: '/friend',\r\n        state: { args: match }\r\n      })\r\n    }\r\n  }\r\n\r\n  updateFromBackend = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let Btn = (props) => (\r\n      <div>\r\n        <NavLink exact activeClassName=\"active\" to={props.to}>\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            {props.label}\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n    return (\r\n      <nav>\r\n        <div className=\"text-center\">\r\n          <div className=\"btn-group\">\r\n          {/* {!this.state.isVisible ? <Btn to=\"/more-pals\" label=\"👋uuui\" /> : null}\r\n            {!this.state.isVisible ? <Btn to=\"/pal-requests\" label=\"👋i\" /> : null} */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nimport Home from './Home';\r\nimport PhoneToken from './auth/PhoneToken';\r\nimport MoreFriends from './userView/MoreFriends';\r\nimport Header from './building-blocks/header';\r\nimport store from './store';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\" style={{ paddingTop: 10 }}>\r\n\r\n      <Router>\r\n        <Header beanId=\"header1\" />\r\n        <Switch>\r\n          < Route exact path=\"/\" component={Home} />\r\n          < Route path=\"/phone-token\" component={PhoneToken} />\r\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} beanId=\"moreFriends1\"/>} />\r\n          < Route path=\"*\" component={Home} />\r\n        </Switch>\r\n      </Router>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nReactDOM.render( <App/> , document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}