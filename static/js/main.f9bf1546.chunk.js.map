{"version":3,"sources":["building-blocks/ssss.jpg","Home.js","services/Constants.js","services/AjaxService.js","services/CashService.js","store.js","building-blocks/RenderForm.js","auth/PhoneToken.js","settings/AppSettingsService.js","building-blocks/PicWrapper.js","building-blocks/Info.js","userView/MoreFriends.js","building-blocks/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","hits","isLoading","error","to","href","target","src","ssss","Component","ipAdress","Const","URLS","BASE_URL","USER","NEW_FRIENDS","FAST_MATCH","LIKE","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","handleWindowSizeChange","setWidth","window","innerWidth","parseInt","isMobile","persistAll","phone","obj","AjaxService","JSON","stringify","catch","e","console","loadAll","getPhone","setPhone","getToken","setToken","token","isPristine","isPristineVal","setPristine","persistBookmarks","arr","this","then","settings","bgColor","textColor","bookmarks","cashStructureTemplate","addEventListener","reducer","combineReducers","form","reduxFormReducer","store","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","Error","matches","update","i","_id","addToStore","key","value","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","noCash","name","uuidv1","Field","onChange","component","PhoneToken","handleChange","event","handleChangeToken","doAuth","authToken","history","preventDefault","optns","autoComplete","withRouter","applyDesignSettings","applyClass","document","body","textColors","bgColors","persistSetting","getSetting","element","colors","selectedColor","forEach","color","classList","remove","class","add","getInputStyleClasses","updatePollInterval","UPDATE_POLL_INTERVAL","isToShowPhotos","PicWrapper","nextPic","photos","ind","setState","imgSrc","personName","AppSettingsService","onClick","alt","arrayToStr","array","result","index","concat","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","interests","sexuality","distance_mi","bio","MoreFriends","getFriendRequests","results","persistToken","getPeopleNearby","log","frRequests","peopleNear","process","like","targetId","alert","beanId","allFr","friendRequestPicIds","isMountedOk","usersNearby","frReq","found","find","oneUser","pic","user","InfoWrapper","hidden","Pic","persons","one","info","image","columns","Header","accessor","sortable","defaultPageSize","pageSize","showPagination","changeState","addMsgMatch","findInMsgMatches","removeMsgMatch","showMoreFriendsRefreshButton","isVisibleMoreFriendsTab","hideMoreFriendsRefreshButton","changeButtonVisibility","toggleFlashTabTitle","startFlashTabTitle","stopFlashTabTitle","getUserData","match","updateFromBackend","showUser","isVisible","msgMatches","initialTitle","App","style","paddingTop","exact","path","render","updates","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9bf1546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssss.7402c98b.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ssss from './building-blocks/ssss.jpg'\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div >\n        <h2>Welcome to #hackTinder</h2>\n  \n        <Link to=\"/phone-token\">Here</Link> you can check out your Tinder likes and match freely. <p />\n        To do that, follow the steps:<p />\n        - Use Chrome or Firefox browser. Warning: It does not work on smartphones! You have to use a computer!<p />\n        - open a new browser tab and log into <a href=\"https://tinder.com/\" target=\"_blank\">tinder.com</a><p />\n        - Hit F12 on your keyboard. Debug window will be visualized, much like the one shown in the image below:<p />\n\n        <img src={ssss} />\n        <p />\n        - go to 'Network' tab <p />\n        - go to 'Fetch/XHR' sub-tab <p />\n        - wait until 'updates?locale=en' is shown, click on it <p />\n        - go to 'Headers' <p />\n        - find 'x-auth-token' and copy it by mouse right click <p />\n        - click <Link to=\"/phone-token\">  here</Link> and paste the 'x-auth-token' in the white box... <p />\n        - that's it. Enjoy! <p />\n      </div >\n    )\n  }\n}\n\nexport default Home;\n","let ipAdress = 'https://bender-app.herokuapp.com/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    USER: ipAdress + 'user/',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n\n    //// storage api:\n    STORAGE: ipAdress + 'storage/',\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\n    STORAGE_BOOKMARKS: ipAdress + ' ',\n    STORAGE_SETTINGS: ipAdress + ' '\n  },\n\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number',\n  VERSION: '1.45'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass CashService extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this[Const.PHONE_HEADER_NAME] = null;\n    this[Const.AUTH_HEADER_NAME] = null;\n    this.settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\n    this.bookmarks = [];\n    this.isPristineVal = true;\n    this.cashStructureTemplate = {\n      settings: this.settings,\n      [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\n      bookmarks: this.bookmarks\n    }\n    window.addEventListener('resize', this.handleWindowSizeChange);\n    this.setWidth(window.innerWidth);\n  };\n\n  handleWindowSizeChange =  ()=> {\n     this.setWidth(window.innerWidth);\n  }\n\n  setWidth = (innerWidth)=> {\n    innerWidth = parseInt(innerWidth)\n    //check if NaN \n    if (innerWidth !== innerWidth) {\n      innerWidth = 1000;\n    }\n    this.innerWidth = innerWidth;\n  }\n\n  isMobile = () => {\n    return this.innerWidth <= 768\n  }\n\n  persistAll =  (phone, obj) => {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\n      'json': JSON.stringify(obj)\n    }, {});\n    promise.catch((e) => {\n      console.error(e);\n    })\n  }\n\n  loadAll = function (phone) {\n    return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\n  }\n\n  getPhone = () => {\n    return this[Const.PHONE_HEADER_NAME];\n  };\n\n  setPhone = (phone) => {\n    this[Const.PHONE_HEADER_NAME] = phone;\n  };\n\n  /// token:\n  getToken = () => {\n    return this[Const.AUTH_HEADER_NAME];\n  };\n\n  setToken = (token) => {\n    this[Const.AUTH_HEADER_NAME] = token;\n  };\n\n  persistToken(token) {\n    AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\n      'json': JSON.stringify({ \"token\": token })\n    });\n  }\n\n  isPristine = () => {\n    return this.isPristineVal;\n  };\n\n  setPristine = (isPristine) => {\n    this.isPristineVal = isPristine;\n  };\n\n  persistBookmarks = function (arr) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\n      'json': JSON.stringify(arr)\n    }, {});\n\n    promise.then((data) => {\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n}\n\nexport default new CashService();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore()?.update?.data?.matches || [];\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport uuidv1 from 'uuid/v1';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport { Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input} placeholder={placeholder} type={type} />\n      {touched && error && <span>{error}</span>}\n      <p />\n    </div>\n  </div>\n)\nlet randomizeName = (obj) => {\n  if (obj.noCash) { // prevent auto-suggest\n    obj.name = uuidv1();\n  }\n}\nclass RenderForm extends React.Component {\n\n  render() {\n    let { options } = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n\n    let RenderFieldWrapped = () => (\n      <div>\n        <form onSubmit={handleSubmit} >\n          {\n            fields.map(op => {\n              randomizeName(op)\n              return <div key={op.name}>\n                <Field name={op.name} onChange={op.onChange} component={eachComponent}\n                  type=\"input\" placeholder={op.placeholder} label={op.label} />\n                <p />\n              </div>\n            })\n          }\n          < input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneToken extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phone: '',\n      token: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  handleChangeToken = event => {\n    this.state.token = event.target.value;\n  };\n\n  doAuth = function (authToken, phone) {\n    CashService.setToken(authToken);\n    CashService.setPhone(authToken);\n    this.props.history.push('/more-pals') \n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let phone = this.state.token;\n    let authToken = this.state.token\n\n      this.doAuth(authToken, phone)\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'X-token', label: 'X-token', placeholder: 'auth token..', noCash: true, onChange: this.handleChangeToken }\n      ]\n    }\n\n    return (\n      <div autoComplete=\"new-password\">\n        <RenderForm autoComplete=\"new-password\" options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneToken);\n","import React from 'react';\nimport Const from '../services/Constants';\n\n//this singleton applies settings at startup:\nclass AppSettingsService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.textColors = [\n      { \"name\": 'Gray', \"class\": 'text-muted' },\n      { \"name\": 'White', \"class\": 'text-white' },\n      { \"name\": 'Dark', \"class\": 'text-dark' },\n      { \"name\": 'Black', \"class\": 'text-body' }\n    ]\n\n    this.bgColors = [\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\n      { \"name\": 'Light', \"class\": 'bg-light' }\n    ]\n\n    this.updatePollInterval = Const.UPDATE_POLL_INTERVAL;\n    this.isToShowPhotos = true;\n    this.applyDesignSettings();\n  }\n\n  applyDesignSettings = () => {\n    this.applyClass(document.body, this.textColors, 'text-white');\n    this.applyClass(document.body, this.bgColors, 'bg-dark');\n  }\n\n  persistSetting = () => {\n  }\n\n  getSetting = () => {\n  }\n\n  applyClass = (element, colors, selectedColor) => {\n    colors.forEach(color => {\n      element.classList.remove(color.class);\n    });\n\n    element.classList.add(selectedColor);\n  }\n\n  getInputStyleClasses = () => {\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\n  }\n}\nexport default new AppSettingsService();\n","import React from 'react';\nimport AppSettingsService from '../settings/AppSettingsService';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos, name } = this.props;\n    this.personName = name;\n\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\n    this.ind = 0;\n\n    let imgSrc = this.isToShowPhotos ? photos?.[this.ind]?.url : null;\n\n    this.state = {\n      photos: photos,\n      imgSrc: imgSrc\n    };\n  }\n\n   nextPic = () => {\n    if (!this.isToShowPhotos) {\n      return;\n    }\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    if (!this.state.imgSrc) {\n      return (\n        <div>\n        </div>\n      )\n    } else if (this.isToShowPhotos) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.nextPic} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <label className=\"text-center\">{this.personName} </label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default PicWrapper;\n","import React from 'react';\n\nfunction arrayToStr(array) {\n  if (!array) {\n    return null;\n  }\n  let result = \"\"\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    const name = element?.name;\n    if (name) {\n      result = result.concat(name + \", \")\n    }\n  }\n  if (result === \"\") {\n    return null;\n  }\n  return result\n}\n\nfunction Info(args) {\n  let { person } = args;\n  if (!person) {\n    return (\n      <div> </div>\n    )\n  }\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\n  person.schools = person.schools?.[0]?.name || \"\";\n  let interests = arrayToStr(person?.interests);\n  let sexuality = arrayToStr(person?.sexuality);\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Age:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Away (miles):  </span> {person.distance_mi} </div>) : null}\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\n      {interests ? (<div> <span className=\"font-weight-bold\">Interests:  </span> {interests} </div>) : null}\n      {sexuality ? (<div> <span className=\"font-weight-bold\">Sexuality:  </span> {sexuality} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      beanId: props.beanId,\n      allFr: [],\n      isPristine: CashService.isPristine()\n    };\n    this.friendRequestPicIds = \"\";\n    this.isMountedOk = true;\n  }\n\n  componentDidMount() {\n    this.getFriendRequests();\n    this.isMountedOk = true;\n  }\n\n  getFriendRequests = () => {\n    let authToken = CashService.getToken();\n\n    let headers = {\n      [Const.AUTH_HEADER_NAME]: authToken\n    }\n\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, headers)\n    promise.then((data) => {\n      if (!data?.data?.data?.results) {\n        return;\n      }\n      CashService.persistToken(authToken);\n      this.getPeopleNearby(data?.data?.data?.results);\n\n    }).catch((e) => {\n      console.log(authToken);\n      console.log(e);\n    })\n  }\n\n  getPeopleNearby = (frRequests) => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let peopleNear = data?.data?.results;\n      this.process(frRequests, peopleNear);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  process(frRequests, usersNearby) {\n    let result = [];\n    frRequests.forEach(frReq => {\n\n      let found = usersNearby.find(oneUser => {\n\n        let pic = oneUser.photos.find(pic => {\n          return pic.id === frReq.user.photos[0].id;\n        });\n\n        return !!pic\n      });\n\n      if (!!found) {\n        result.push(found)\n      } else {\n        frReq.photos = frReq.user.photos\n        frReq.name = '';\n        result.push(frReq)\n      }\n\n    });\n    this.setState({ allFr: result });\n  }\n\n  like = (targetId) => {\n    CashService.setPristine(false);\n    this.setState({ isPristine: false })\n    let promise = AjaxService.doGet(Const.URLS.LIKE + targetId, {});\n    promise.then((data) => {\n      window.alert('Check your tinder and start chatting with the new match. ');\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n      return (\n        <div className=\"text-justify text-wrap\">\n          <Info person={person} />\n          <button type=\"button\" hidden={!this.state.isPristine} className=\"btn btn-success\" onClick={() => this.like(person._id)}>Like</button>\n        </div>\n      )\n    }\n\n    let Pic = args => <PicWrapper photos={args.photos} name={args.name} />\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} name={one.name} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>  \n        <br />\n        Push 'Like' button of a person you like the most. You can have one match per day only, so choose wisely...\n        <br />\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n        \n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      isVisibleMoreFriendsTab: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj);\n  }\n\n  addMsgMatch = () => {\n \n  }\n\n  findInMsgMatches = () => {\n    return -1;\n  }\n\n  removeMsgMatch = () => {\n\n  }\n\n  showMoreFriendsRefreshButton = () => {\n    this.setState({ isVisibleMoreFriendsTab: true });\n  }\n\n  hideMoreFriendsRefreshButton = () => {\n    this.setState({ isVisibleMoreFriendsTab: false });\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n\n  toggleFlashTabTitle = () => {\n\n  }\n\n  startFlashTabTitle = () => {\n \n  }\n\n  stopFlashTabTitle = () => {\n   \n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n  }\n\n  updateFromBackend = () => {\n\n  }\n\n  render() {\n\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    return (\n      <nav>\n        <div className=\"text-center\">\n          <div className=\"btn-group\">\n          {/* {!this.state.isVisible ? <Btn to=\"/more-pals\" label=\"👋uuui\" /> : null}\n            {!this.state.isVisible ? <Btn to=\"/pal-requests\" label=\"👋i\" /> : null} */}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Header);","import React from 'react';\n\nimport Home from './Home';\nimport PhoneToken from './auth/PhoneToken';\nimport MoreFriends from './userView/MoreFriends';\nimport Header from './building-blocks/header';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/phone-token\" component={PhoneToken} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} beanId=\"moreFriends1\"/>} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}